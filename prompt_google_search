import os,json
from google import genai
from google.genai.types import Tool, GenerateContentConfig, GoogleSearch

path_to_credential = '/Users/wangez/Downloads/GCP_Credentials/agolis-allen-first-13f3be86c3d1.json'
os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = path_to_credential

os.environ['GOOGLE_CLOUD_PROJECT']='agolis-allen-first'
os.environ['GOOGLE_CLOUD_LOCATION']='us-central1'
os.environ['GOOGLE_GENAI_USE_VERTEXAI']='True'

client = genai.Client()
model_id = "gemini-2.0-flash"

google_search_tool = Tool(
    google_search = GoogleSearch()
)

response = client.models.generate_content(
    model=model_id,
    # contents="When is the next total solar eclipse in the United States?",
    contents = """I got two task for you. One is what's weather today in Beijing, the second is Help to desing a simple travel plan in the upcoming vacation on May 1st. """,
    config=GenerateContentConfig(
        tools=[google_search_tool],
        response_modalities=["TEXT"],
    )
)

print("The final response is: \n -------------------------")
print(response.text)

candidate_idx=0
part_idx=0
grounding_support_idx=0
for candidate in response.candidates:
    for part in candidate.content.parts:
        print('text from part {} in candidate {} is: \n -------------------------'.format(part_idx,candidate_idx))
        print(part.text)
        print('\n')
        part_idx += 1

    for grounding_support in candidate.grounding_metadata.grounding_supports:
        print ('text from ground_support {} in candidate {} is: \n -------------------------'.format(grounding_support_idx,candidate_idx))
        print(grounding_support.segment.text)
        print('part index is {}'.format(grounding_support.segment.part_index))
        print('start index is {}'.format(grounding_support.segment.start_index))
        print('end index is {}'.format(grounding_support.segment.end_index))
        grounding_support_idx += 1

candidate_idx += 1
# for each in response.candidates[0].content.parts:
#     print(each.text)
# Example response:
# The next total solar eclipse visible in the contiguous United States will be on ...

# To get grounding metadata as web content.
print(response.candidates[0].grounding_metadata.search_entry_point.rendered_content)